
@{
    ViewData["Title"] = "View";
}

<div class="container" id="loading" style="display: none;">@*Loading animation, hidden by default*@
    <div>
        <img src="~/images/loading.gif" class="img-responsive center-block" />
    </div>
</div>

<div class="container" id="mainForm">
    <h2>Comment y aller ?</h2>
    @*<h3>Implémentés: Vélib, Autolib, Métro, Géolocalisation automatique</h3>*@


    <form action="/CommentYAller/Coordinates" method="post" onsubmit="loadingDisplay()">
        <h4>Point de départ: </h4>

        <div class="row" id="coords_depart">
            <div class="col-lg-2 col-sm-4"><input disabled type="text" class="form-control" id="lad" name="latitude_depart" value="48.847106" placeholder="latitude"/></div>
            <div class="col-lg-2 col-sm-4"><input disabled type="text" class="form-control" id="lod" name="longitude_depart" value="2.340441" placeholder="longitude"/></div>
        </div>

        <div class="row">
            <div class="col-lg-4 col-sm-8">
                <div class="input-group">
                    <span class="input-group-btn"><button type="button" class="btn btn-primary" onclick="getLocation()"><i class="fa fa-location-arrow"></i></button></span>
                    <input type="text" class="form-control" name="adresse_depart" placeholder="Adresse" id="Departure" onchange="getLatLngDepartDelayed()"/>
                </div>
            </div>
        </div>

        <div class="row" id="coords_arriv">
            <div class="col-lg-2 col-sm-4"><input disabled type="text" class="form-control" id="laa" name="latitude_arriv" value="48.886705" placeholder="latitude" /></div>
            <div class="col-lg-2 col-sm-4"><input disabled type="text" class="form-control" id="loa" name="longitude_arriv" value="2.347589" placeholder="longitude" /></div>
        </div>

        <div class="row">
            <div class="col-lg-4 col-sm-8">
                <div class="input-group">
                    <span class="input-group-addon"><i class="fa fa-location-arrow"></i></span>
                    <input type="text" class="form-control" name="adresse_arriv" placeholder="Adresse" id="Arrival" onchange="getLatLngArrivDelayed()"/>
                </div>
            </div>
        </div>

        <h4>Je porte quelque chose de lourd (sac, valise...) dont voici le poids approximatif: </h4>
        <div class="row">           
            <div class="col-lg-2 col-sm-4">
                <div class="input-group">
                    <input type="number" class="form-control" placeholder="Charge" />
                    <span class="input-group-addon">Kg</span>
                </div>
            </div>
        </div>

        <h4>J'estime ma tolérance à la pluie à:</h4>
        <div class="row">
            <div class="col-lg-4 col-sm-8">
                <div class="range">
                        <span><input type="range" min="0" max="10" value="5" step="1" name="tol" onchange="showValue(this.value)" /></span>
                        <span class="input-group-addon" id="tol_disp">0</span>
                </div>
            </div>
        </div>

        <h4>Je voudrais me déplacer en:</h4>
        <div class="row">
            <div class="col-lg-2 col-sm-4">
                <div class="checkbox">
                    <label><input checked type="checkbox" value="on" name="autolib"><strong>Autolib</strong> <i class="fa fa-car"></i></label>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-2 col-sm-4">
                <div class="checkbox">
                    <label><input checked type="checkbox" value="on" name="velib"><strong>Vélib</strong> <i class="fa fa-bicycle"></i></label>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-2 col-sm-4">
                <div class="checkbox">
                    <label><input checked type="checkbox" value="on" name="metro"><strong>Métro</strong> <i class="fa fa-train"></i></label>
                </div>
            </div>
        </div>
        <div class="row" title="La téléportation n'est pas encore disponible à Paris">
            <div class="col-lg-2 col-sm-4">
                <div class="checkbox disabled">
                    <label><input disabled type="checkbox" value="off" name="teleportation"><strong>Téléportation</strong> <i class="fa fa-superpowers"></i></label>
                </div>
            </div>
        </div>
        <br>
        <div class="row">
            <div class="col-lg-2 col-sm-4">
                <input onclick="loadingDisplay" type="submit" class="btn btn-info btn-block" value="Comment y aller ?"/>
            </div>
        </div>
    </form>
</div>

<script>
    function getLatLngDepartDelayed() {
        setTimeout(getLatLngDepart, 1);
    }
    function getLatLngDepart() {
        var geocoder = new google.maps.Geocoder();
        var address = document.getElementById('Departure').value;
        geocoder.geocode({
            'address': address
        }, function (results, status) {
            if (status == google.maps.GeocoderStatus.OK) {
                var latLng = results[0].geometry.location;
                document.getElementById("lad").value = results[0].geometry.location.lat().toString().replace(".", ".").substring(0, 9);
                document.getElementById("lod").value = results[0].geometry.location.lng().toString().replace(".", ".").substring(0, 9);
            } else {
                alert("Geocode was not successful for the following reason: " + status);
            }
        });
    }
    function getLatLngArrivDelayed() {
        setTimeout(getLatLngArriv, 1);
    }
    function getLatLngArriv() {
        var geocoder = new google.maps.Geocoder();
        var address = document.getElementById('Arrival').value;
        geocoder.geocode({
            'address': address
        }, function (results, status) {
            if (status == google.maps.GeocoderStatus.OK) {
                var latLng = results[0].geometry.location;
                document.getElementById("laa").value = results[0].geometry.location.lat().toString().replace(".", ".").substring(0, 9);
                document.getElementById("loa").value = results[0].geometry.location.lng().toString().replace(".", ".").substring(0, 9);
            } else {
                alert("Geocode was not successful for the following reason: " + status);
            }
        });
    }
</script>

<script>
    var x = document.getElementById("lad");
    var y = document.getElementById("lod");

    var main = document.getElementById("mainForm")
    var loading = document.getElementById("loading")

    function loadingDisplay() {
        main.style.display = 'none';
        loading.style.display = '';
    }

    function getLocation() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(showPosition);
        } else {
            z.innerHTML = "Geolocation is not supported by this browser.";
        }
    }
    function showPosition(position) {
        x.value = position.coords.latitude.toString().replace(".", ".").substring(0,9);
        y.value = position.coords.longitude.toString().replace(".", ".").substring(0, 9);
    }
    function showValue(newValue) {
        document.getElementById("tol_disp").innerHTML = newValue;
    }
</script>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDdlwaELns2awnl55_ar-WEk5FvEqD48kY&libraries=places&callback=initAutocomplete&language=fr"
        async defer></script>

<script>
    function initAutocomplete() {
        var input1 = document.getElementById('Arrival');
        var input = document.getElementById('Departure');
        var options = {
            componentRestrictions: {country: 'fr'}
        };

        autocomplete = new google.maps.places.Autocomplete(input1, options);
        autocomplete = new google.maps.places.Autocomplete(input, options);
    }
</script>

<script type="text/javascript">
    function stopEnterKey(evt) {
        var evt = (evt) ? evt : ((event) ? event : null);
        var node = (evt.target) ? evt.target : ((evt.srcElement) ? evt.srcElement : null);
        if ((evt.keyCode == 13) && (node.type == "text")) { return false; }
    }
    document.onkeypress = stopEnterKey;
</script>